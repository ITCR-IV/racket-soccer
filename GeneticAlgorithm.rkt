#lang racket

(provide geneticAlgorithm)

;Main Genetc Algorithm Function
(define (geneticAlgorithm playerList ballPos)
(my_append (geneticAlgorithmPortero playerList 0 ballPos) (my_append (geneticAlgorithmDefensas playerList 0 ballPos) (my_append (geneticAlgorithmMedios playerList 0 ballPos)
(my_append (geneticAlgorithmDelanteros playerList 0 ballPos) (my_append (geneticAlgorithmPortero playerList 1 ballPos) (my_append (geneticAlgorithmDefensas playerList 1 ballPos)
(my_append (geneticAlgorithmMedios playerList 1 ballPos) (geneticAlgorithmDelanteros playerList 1 ballPos))))))))
)

;Aux. Algorithm
(define (geneticAlgorithmPortero playerList teamNum ballPos)
  (mutationFunction(reproductionFunction (selectFunction (quicksort (fitnessFunction playerList teamNum 0 ballPos)) (* 2 (howManyTypePlayers playerList 0 teamNum))) teamNum 0))
)

(define (geneticAlgorithmDefensas playerList teamNum ballPos)
  (mutationFunction(reproductionFunction (selectFunction (quicksort (fitnessFunction playerList teamNum 1 ballPos)) (* 2 (howManyTypePlayers playerList 1 teamNum))) teamNum 1))
)

(define (geneticAlgorithmMedios playerList teamNum ballPos)
  (mutationFunction(reproductionFunction (selectFunction (quicksort (fitnessFunction playerList teamNum 2 ballPos)) (* 2 (howManyTypePlayers playerList 2 teamNum))) teamNum 2))
)

(define (geneticAlgorithmDelanteros playerList teamNum ballPos)
  (mutationFunction(reproductionFunction (selectFunction (quicksort (fitnessFunction playerList teamNum 3 ballPos)) (* 2 (howManyTypePlayers playerList 3 teamNum))) teamNum 3))
)

;FUNCIONES DE FITNESS
(define (fitnessFunction playerList teamNum playerType ballPos)
  (cond ((null? playerList) null)
        ((= (cadar playerList) teamNum) 
         (cond ((= playerType 0)
                (cons (fitnessPortero (car playerList)) (fitnessFunction (cdr playerList) teamNum playerType ballPos))
               )
               ((= playerType 1)
                (cons (fitnessDefensa (car playerList)) (fitnessFunction (cdr playerList) teamNum playerType ballPos))
               )
               ((= playerType 2)
                (cons (fitnessMedio (car playerList)) (fitnessFunction (cdr playerList) teamNum playerType ballPos))
               )
               ((= playerType 3)
                (cons (fitnessDelantero (car playerList) ballPos) (fitnessFunction (cdr playerList) teamNum playerType ballPos))
               )
         )
        )
        (else (fitnessFunction (cdr playerList) teamNum playerType ballPos))
  )
)

(define (fitnessPortero playerInfo)
  (cond ((= (cadr playerInfo) 0)
         (cons (+ (* 5 (/ (- 1000 (caaddr playerInfo)) 100)) (+ (* 3 (/ (* (- 325 (abs (- 325 (car(cdaddr playerInfo))))) (/ 40.0 13.0)) 100.0)) (+ (car (cadddr playerInfo)) (cadr (cadddr playerInfo))))) playerInfo)
         )
        ((= (cadr playerInfo) 1)
         (cons (+ (* 5 (/ (caaddr playerInfo) 100)) (+ (* 3 (/ (* (- 325 (abs (- 325 (car(cdaddr playerInfo))))) (/ 40.0 13.0)) 100.0)) (+ (car (cadddr playerInfo)) (cadr (cadddr playerInfo))))) playerInfo)
         )
  )
)

(define (fitnessDefensa playerInfo)
  (cond ((= (cadr playerInfo) 0)
         (cons (+ (* 3 (/ (- 1000 (abs (- 166 (caaddr playerInfo)))) 100.0)) (+ (car (cadddr playerInfo)) (cadr (cadddr playerInfo)))) playerInfo)
         )
        ((= (cadr playerInfo) 1)
         (cons (+ (* 3 (/ (- 1000 (abs (- 833 (caaddr playerInfo)))) 100.0)) (+ (car (cadddr playerInfo)) (cadr (cadddr playerInfo)))) playerInfo)
         )
  )
)

(define (fitnessMedio playerInfo)
  (cond ((= (cadr playerInfo) 0)
         (cons (+ (* 3 (/ (- 1000 (abs (- 450 (caaddr playerInfo)))) 100.0)) (+ (car (cadddr playerInfo)) (cadr (cadddr playerInfo)))) playerInfo)
         )
        ((= (cadr playerInfo) 1)
         (cons (+ (* 3 (/ (- 1000 (abs (- 550 (caaddr playerInfo)))) 100.0)) (+ (car (cadddr playerInfo)) (cadr (cadddr playerInfo)))) playerInfo)
         )
  )
)

(define (fitnessDelantero playerInfo ballPos)
  (cons (+ (* 3 (/ (- 1000 (abs (- (car ballPos) (caaddr playerInfo)))) 100.0)) (+ (* 3 (/ (* (- (cadr ballPos) (abs (- (cadr ballPos) (car(cdaddr playerInfo))))) (/ 40.0 13.0)) 100.0)) (+ (car (cadddr playerInfo)) (cadr (cadddr playerInfo))))) playerInfo)
)

;SELECCIÓN
(define (selectFunction playerList amountPlayers)
  (cond ((= amountPlayers (length playerList)) playerList)
        ((< amountPlayers (length playerList)) (selectFunction (cdr playerList) amountPlayers))
  )
)

;REPRODUCCIÓN
(define (reproductionFunction playerList teamNum playerType)
  (cond ((null? playerList) null)
        (else (cons (list playerType teamNum (list (quotient (+ (caar(cdddar playerList)) (caadr(cddadr playerList))) 2) (quotient (+ (cadar(cdddar playerList)) (cadadr(cddadr playerList))) 2))
        (list (quotient (+ (caadr(cdddar playerList)) (caaddr(cddadr playerList))) 2) (quotient (+ (cadadr(cdddar playerList)) (car(cdaddr(cddadr playerList)))) 2) (quotient (+ (car(cddadr(cdddar playerList))) (cadr(cdaddr(cddadr playerList)))) 2) )) (reproductionFunction (cddr playerList) teamNum playerType))
        )   
  )
)

;MUTACIÓNES
(define (mutationFunction playerList)
  (cond ((null? playerList) null)
        (else (cons (list (caar playerList) (cadar playerList)
                    (list (cond ((< 1000 (+ (car(caddar playerList)) (- (random 201) 100))) 1000)
                                ((> 0 (+ (car(caddar playerList)) (- (random 201) 100))) 0)
                                (else (+ (car(caddar playerList)) (- (random 201) 100))))
                          (cond ((< 650 (+ (cadr(caddar playerList)) (- (random 101) 50))) 650)
                                ((> 0 (+ (cadr(caddar playerList)) (- (random 101) 50))) 0)
                                (else (+ (cadr(caddar playerList)) (- (random 101) 50)))))
                    (list (cond ((< 10 (+ (caar(cdddar playerList)) (- (random 2) 1))) 10)
                                ((> 0 (+ (caar(cdddar playerList)) (- (random 3) 1))) 0)
                                (else (+ (caar(cdddar playerList)) (- (random 3) 1))))
                          (cond ((< 10 (+ (cadar(cdddar playerList)) (- (random 3) 1))) 10)
                                ((> 0 (+ (cadar(cdddar playerList)) (- (random 3) 1))) 0)
                                (else (+ (cadar(cdddar playerList)) (- (random 3) 1))))
                          (cond ((< 10 (+ (caddar(cdddar playerList)) (- (random 3) 1))) 10)
                                ((> 0 (+ (caddar(cdddar playerList)) (- (random 3) 1))) 0)
                                (else (+ (caddar(cdddar playerList)) (- (random 3) 1))))))
                    (mutationFunction (cdr playerList)))) 
        )
)



;MISC.
(define (replace pos element list)
  (cond
    ((null? list) null)
    ((= pos 0) (cons element (replace (- pos 1) element (cdr list))))
    (else (cons (car list) (replace (- pos 1) element (cdr list))))
  )
)

(define (quicksort list)
  (cond ((null? list) null)
        (else (my_append (my_append (quicksort (quicksort_aux_menores (caar list) list))
                                               (quicksort_aux_iguales (caar list) list))
                                    (quicksort (quicksort_aux_mayores (caar list) list))))
  )
)

(define (quicksort_aux_mayores pivot list)
  (cond ((null? list) null)
        ((< pivot (caar list)) (cons (car list) (quicksort_aux_mayores pivot (cdr list))))
        (else (quicksort_aux_mayores pivot (cdr list)))
  )
)

(define (quicksort_aux_menores pivot list)
  (cond ((null? list) null)
        ((> pivot (caar list)) (cons (car list) (quicksort_aux_menores pivot (cdr list))))
        (else (quicksort_aux_menores pivot (cdr list)))
  )
)

(define (quicksort_aux_iguales pivot list)
  (cond ((null? list) null)
        ((= pivot (caar list)) (cons (car list) (quicksort_aux_iguales pivot (cdr list))))
        (else (quicksort_aux_iguales pivot (cdr list)))
  )
)

(define (my_append list1 list2)
  (cond ((null? list1) list2)
        (else (cons (car list1) (my_append (cdr list1) list2)))
        )
)

(define (howManyTypePlayers playerList playerType teamNum)
(cond ((null? playerList) 0)
        ((= (cadar playerList) teamNum) 
         (cond ((= (caar playerList) playerType)
                (+ 1 (howManyTypePlayers (cdr playerList) playerType teamNum))
               )
               (else (howManyTypePlayers (cdr playerList) playerType teamNum))
         )
         
        )
        (else (howManyTypePlayers (cdr playerList) playerType teamNum))
        )
)


;(geneticAlgorithmPortero '((3 0 (150 200) (3 2 1)) (0 0 (175 400) (5 6 1)) (1 0 (200 300) (2 4 1)) (0 1 (100 550) (1 5 1)) (0 0 (800 550) (1 1 1)) (2 0 (400 550) (1 8 1)) (0 1 (770 550) (2 5 1))) 0 '(120 240))
